diff --git a/lib/esm/components/editable-text/editableText.js b/lib/esm/components/editable-text/editableText.js
index 84f03fa9c2b55115ce11f84ace3c89b5b287edca..5e5488a57e328ba5ce81503ce688300a1cc91489 100644
--- a/lib/esm/components/editable-text/editableText.js
+++ b/lib/esm/components/editable-text/editableText.js
@@ -188,7 +188,16 @@ var EditableText = /** @class */ (function (_super) {
         if (this.state.isEditing && !prevState.isEditing) {
             (_b = (_a = this.props).onEdit) === null || _b === void 0 ? void 0 : _b.call(_a, this.state.value);
         }
-        this.updateInputDimensions();
+        // updateInputDimensions is an expensive method. Call it only when the props
+        // it depends on change
+        if (this.state.value !== prevState.value ||
+            this.props.alwaysRenderInput !== prevProps.alwaysRenderInput ||
+            this.props.maxLines !== prevProps.maxLines ||
+            this.props.minLines !== prevProps.minLines ||
+            this.props.minWidth !== prevProps.minWidth ||
+            this.props.multiline !== prevProps.multiline) {
+            this.updateInputDimensions();
+        }
     };
     EditableText.prototype.renderInput = function (value) {
         var _a = this.props, disabled = _a.disabled, maxLength = _a.maxLength, multiline = _a.multiline, type = _a.type, placeholder = _a.placeholder;
diff --git a/lib/esm/components/popover/popover.js b/lib/esm/components/popover/popover.js
index 9d4ac75a455afb102deb4947b7a066361899bcc8..087ed7d4f0f10759b147e435ba925b13c2fcf660 100644
--- a/lib/esm/components/popover/popover.js
+++ b/lib/esm/components/popover/popover.js
@@ -166,6 +166,8 @@ var Popover = /** @class */ (function (_super) {
                 // close the popover if necessary.
                 if (e.relatedTarget != null && !_this.isElementInPopover(e.relatedTarget)) {
                     _this.handleMouseLeave(e);
+                } else if(e.relatedTarget === null) {
+                    _this.handleMouseLeave(e);
                 }
             }
             _this.lostFocusOnSamePage = e.relatedTarget != null;
