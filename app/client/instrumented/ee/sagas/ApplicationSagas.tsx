function cov_kcz5655rd() {
  var path = "/Users/apple/github/appsmith/app/client/src/ee/sagas/ApplicationSagas.tsx";
  var hash = "1354926bb919627fb762a61b5a69cf7d8415f81a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/apple/github/appsmith/app/client/src/ee/sagas/ApplicationSagas.tsx",
    statementMap: {
      "0": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 70,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "applicationSagas",
        decl: {
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 24,
            column: 41
          }
        },
        loc: {
          start: {
            line: 24,
            column: 44
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 24
      }
    },
    branchMap: {},
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1354926bb919627fb762a61b5a69cf7d8415f81a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_kcz5655rd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_kcz5655rd();
export * from "ce/sagas/ApplicationSagas";
import { publishApplicationSaga, updateApplicationLayoutSaga, updateApplicationSaga, changeAppViewAccessSaga, getAllApplicationSaga, fetchAppAndPagesSaga, forkApplicationSaga, createApplicationSaga, setDefaultApplicationPageSaga, deleteApplicationSaga, importApplicationSaga, fetchReleases, initDatasourceConnectionDuringImport, showReconnectDatasourcesModalSaga, fetchUnconfiguredDatasourceList, uploadNavigationLogoSaga, deleteNavigationLogoSaga } from "ce/sagas/ApplicationSagas";
import { ReduxActionTypes } from "@appsmith/constants/ReduxActionConstants";
import { all, takeLatest } from "redux-saga/effects";
export default function* applicationSagas() {
  cov_kcz5655rd().f[0]++;
  cov_kcz5655rd().s[0]++;
  yield all([takeLatest(ReduxActionTypes.PUBLISH_APPLICATION_INIT, publishApplicationSaga), takeLatest(ReduxActionTypes.UPDATE_APP_LAYOUT, updateApplicationLayoutSaga), takeLatest(ReduxActionTypes.UPDATE_APPLICATION, updateApplicationSaga), takeLatest(ReduxActionTypes.CHANGE_APPVIEW_ACCESS_INIT, changeAppViewAccessSaga), takeLatest(ReduxActionTypes.GET_ALL_APPLICATION_INIT, getAllApplicationSaga), takeLatest(ReduxActionTypes.FETCH_APPLICATION_INIT, fetchAppAndPagesSaga), takeLatest(ReduxActionTypes.FORK_APPLICATION_INIT, forkApplicationSaga), takeLatest(ReduxActionTypes.CREATE_APPLICATION_INIT, createApplicationSaga), takeLatest(ReduxActionTypes.SET_DEFAULT_APPLICATION_PAGE_INIT, setDefaultApplicationPageSaga), takeLatest(ReduxActionTypes.DELETE_APPLICATION_INIT, deleteApplicationSaga), takeLatest(ReduxActionTypes.IMPORT_APPLICATION_INIT, importApplicationSaga), takeLatest(ReduxActionTypes.UPLOAD_NAVIGATION_LOGO_INIT, uploadNavigationLogoSaga), takeLatest(ReduxActionTypes.DELETE_NAVIGATION_LOGO_INIT, deleteNavigationLogoSaga), takeLatest(ReduxActionTypes.FETCH_RELEASES, fetchReleases), takeLatest(ReduxActionTypes.INIT_DATASOURCE_CONNECTION_DURING_IMPORT_REQUEST, initDatasourceConnectionDuringImport), takeLatest(ReduxActionTypes.SHOW_RECONNECT_DATASOURCE_MODAL, showReconnectDatasourcesModalSaga), takeLatest(ReduxActionTypes.FETCH_UNCONFIGURED_DATASOURCE_LIST, fetchUnconfiguredDatasourceList)]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3Zfa2N6NTY1NXJkIiwiYWN0dWFsQ292ZXJhZ2UiLCJwdWJsaXNoQXBwbGljYXRpb25TYWdhIiwidXBkYXRlQXBwbGljYXRpb25MYXlvdXRTYWdhIiwidXBkYXRlQXBwbGljYXRpb25TYWdhIiwiY2hhbmdlQXBwVmlld0FjY2Vzc1NhZ2EiLCJnZXRBbGxBcHBsaWNhdGlvblNhZ2EiLCJmZXRjaEFwcEFuZFBhZ2VzU2FnYSIsImZvcmtBcHBsaWNhdGlvblNhZ2EiLCJjcmVhdGVBcHBsaWNhdGlvblNhZ2EiLCJzZXREZWZhdWx0QXBwbGljYXRpb25QYWdlU2FnYSIsImRlbGV0ZUFwcGxpY2F0aW9uU2FnYSIsImltcG9ydEFwcGxpY2F0aW9uU2FnYSIsImZldGNoUmVsZWFzZXMiLCJpbml0RGF0YXNvdXJjZUNvbm5lY3Rpb25EdXJpbmdJbXBvcnQiLCJzaG93UmVjb25uZWN0RGF0YXNvdXJjZXNNb2RhbFNhZ2EiLCJmZXRjaFVuY29uZmlndXJlZERhdGFzb3VyY2VMaXN0IiwidXBsb2FkTmF2aWdhdGlvbkxvZ29TYWdhIiwiZGVsZXRlTmF2aWdhdGlvbkxvZ29TYWdhIiwiUmVkdXhBY3Rpb25UeXBlcyIsImFsbCIsInRha2VMYXRlc3QiLCJhcHBsaWNhdGlvblNhZ2FzIiwiZiIsInMiLCJQVUJMSVNIX0FQUExJQ0FUSU9OX0lOSVQiLCJVUERBVEVfQVBQX0xBWU9VVCIsIlVQREFURV9BUFBMSUNBVElPTiIsIkNIQU5HRV9BUFBWSUVXX0FDQ0VTU19JTklUIiwiR0VUX0FMTF9BUFBMSUNBVElPTl9JTklUIiwiRkVUQ0hfQVBQTElDQVRJT05fSU5JVCIsIkZPUktfQVBQTElDQVRJT05fSU5JVCIsIkNSRUFURV9BUFBMSUNBVElPTl9JTklUIiwiU0VUX0RFRkFVTFRfQVBQTElDQVRJT05fUEFHRV9JTklUIiwiREVMRVRFX0FQUExJQ0FUSU9OX0lOSVQiLCJJTVBPUlRfQVBQTElDQVRJT05fSU5JVCIsIlVQTE9BRF9OQVZJR0FUSU9OX0xPR09fSU5JVCIsIkRFTEVURV9OQVZJR0FUSU9OX0xPR09fSU5JVCIsIkZFVENIX1JFTEVBU0VTIiwiSU5JVF9EQVRBU09VUkNFX0NPTk5FQ1RJT05fRFVSSU5HX0lNUE9SVF9SRVFVRVNUIiwiU0hPV19SRUNPTk5FQ1RfREFUQVNPVVJDRV9NT0RBTCIsIkZFVENIX1VOQ09ORklHVVJFRF9EQVRBU09VUkNFX0xJU1QiXSwic291cmNlcyI6WyJBcHBsaWNhdGlvblNhZ2FzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiY2Uvc2FnYXMvQXBwbGljYXRpb25TYWdhc1wiO1xuaW1wb3J0IHtcbiAgcHVibGlzaEFwcGxpY2F0aW9uU2FnYSxcbiAgdXBkYXRlQXBwbGljYXRpb25MYXlvdXRTYWdhLFxuICB1cGRhdGVBcHBsaWNhdGlvblNhZ2EsXG4gIGNoYW5nZUFwcFZpZXdBY2Nlc3NTYWdhLFxuICBnZXRBbGxBcHBsaWNhdGlvblNhZ2EsXG4gIGZldGNoQXBwQW5kUGFnZXNTYWdhLFxuICBmb3JrQXBwbGljYXRpb25TYWdhLFxuICBjcmVhdGVBcHBsaWNhdGlvblNhZ2EsXG4gIHNldERlZmF1bHRBcHBsaWNhdGlvblBhZ2VTYWdhLFxuICBkZWxldGVBcHBsaWNhdGlvblNhZ2EsXG4gIGltcG9ydEFwcGxpY2F0aW9uU2FnYSxcbiAgZmV0Y2hSZWxlYXNlcyxcbiAgaW5pdERhdGFzb3VyY2VDb25uZWN0aW9uRHVyaW5nSW1wb3J0LFxuICBzaG93UmVjb25uZWN0RGF0YXNvdXJjZXNNb2RhbFNhZ2EsXG4gIGZldGNoVW5jb25maWd1cmVkRGF0YXNvdXJjZUxpc3QsXG4gIHVwbG9hZE5hdmlnYXRpb25Mb2dvU2FnYSxcbiAgZGVsZXRlTmF2aWdhdGlvbkxvZ29TYWdhLFxufSBmcm9tIFwiY2Uvc2FnYXMvQXBwbGljYXRpb25TYWdhc1wiO1xuaW1wb3J0IHsgUmVkdXhBY3Rpb25UeXBlcyB9IGZyb20gXCJAYXBwc21pdGgvY29uc3RhbnRzL1JlZHV4QWN0aW9uQ29uc3RhbnRzXCI7XG5pbXBvcnQgeyBhbGwsIHRha2VMYXRlc3QgfSBmcm9tIFwicmVkdXgtc2FnYS9lZmZlY3RzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKiBhcHBsaWNhdGlvblNhZ2FzKCkge1xuICB5aWVsZCBhbGwoW1xuICAgIHRha2VMYXRlc3QoXG4gICAgICBSZWR1eEFjdGlvblR5cGVzLlBVQkxJU0hfQVBQTElDQVRJT05fSU5JVCxcbiAgICAgIHB1Ymxpc2hBcHBsaWNhdGlvblNhZ2EsXG4gICAgKSxcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuVVBEQVRFX0FQUF9MQVlPVVQsIHVwZGF0ZUFwcGxpY2F0aW9uTGF5b3V0U2FnYSksXG4gICAgdGFrZUxhdGVzdChSZWR1eEFjdGlvblR5cGVzLlVQREFURV9BUFBMSUNBVElPTiwgdXBkYXRlQXBwbGljYXRpb25TYWdhKSxcbiAgICB0YWtlTGF0ZXN0KFxuICAgICAgUmVkdXhBY3Rpb25UeXBlcy5DSEFOR0VfQVBQVklFV19BQ0NFU1NfSU5JVCxcbiAgICAgIGNoYW5nZUFwcFZpZXdBY2Nlc3NTYWdhLFxuICAgICksXG4gICAgdGFrZUxhdGVzdChcbiAgICAgIFJlZHV4QWN0aW9uVHlwZXMuR0VUX0FMTF9BUFBMSUNBVElPTl9JTklULFxuICAgICAgZ2V0QWxsQXBwbGljYXRpb25TYWdhLFxuICAgICksXG4gICAgdGFrZUxhdGVzdChSZWR1eEFjdGlvblR5cGVzLkZFVENIX0FQUExJQ0FUSU9OX0lOSVQsIGZldGNoQXBwQW5kUGFnZXNTYWdhKSxcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuRk9SS19BUFBMSUNBVElPTl9JTklULCBmb3JrQXBwbGljYXRpb25TYWdhKSxcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuQ1JFQVRFX0FQUExJQ0FUSU9OX0lOSVQsIGNyZWF0ZUFwcGxpY2F0aW9uU2FnYSksXG4gICAgdGFrZUxhdGVzdChcbiAgICAgIFJlZHV4QWN0aW9uVHlwZXMuU0VUX0RFRkFVTFRfQVBQTElDQVRJT05fUEFHRV9JTklULFxuICAgICAgc2V0RGVmYXVsdEFwcGxpY2F0aW9uUGFnZVNhZ2EsXG4gICAgKSxcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuREVMRVRFX0FQUExJQ0FUSU9OX0lOSVQsIGRlbGV0ZUFwcGxpY2F0aW9uU2FnYSksXG4gICAgdGFrZUxhdGVzdChSZWR1eEFjdGlvblR5cGVzLklNUE9SVF9BUFBMSUNBVElPTl9JTklULCBpbXBvcnRBcHBsaWNhdGlvblNhZ2EpLFxuICAgIHRha2VMYXRlc3QoXG4gICAgICBSZWR1eEFjdGlvblR5cGVzLlVQTE9BRF9OQVZJR0FUSU9OX0xPR09fSU5JVCxcbiAgICAgIHVwbG9hZE5hdmlnYXRpb25Mb2dvU2FnYSxcbiAgICApLFxuICAgIHRha2VMYXRlc3QoXG4gICAgICBSZWR1eEFjdGlvblR5cGVzLkRFTEVURV9OQVZJR0FUSU9OX0xPR09fSU5JVCxcbiAgICAgIGRlbGV0ZU5hdmlnYXRpb25Mb2dvU2FnYSxcbiAgICApLFxuICAgIHRha2VMYXRlc3QoUmVkdXhBY3Rpb25UeXBlcy5GRVRDSF9SRUxFQVNFUywgZmV0Y2hSZWxlYXNlcyksXG4gICAgdGFrZUxhdGVzdChcbiAgICAgIFJlZHV4QWN0aW9uVHlwZXMuSU5JVF9EQVRBU09VUkNFX0NPTk5FQ1RJT05fRFVSSU5HX0lNUE9SVF9SRVFVRVNULFxuICAgICAgaW5pdERhdGFzb3VyY2VDb25uZWN0aW9uRHVyaW5nSW1wb3J0LFxuICAgICksXG4gICAgdGFrZUxhdGVzdChcbiAgICAgIFJlZHV4QWN0aW9uVHlwZXMuU0hPV19SRUNPTk5FQ1RfREFUQVNPVVJDRV9NT0RBTCxcbiAgICAgIHNob3dSZWNvbm5lY3REYXRhc291cmNlc01vZGFsU2FnYSxcbiAgICApLFxuICAgIHRha2VMYXRlc3QoXG4gICAgICBSZWR1eEFjdGlvblR5cGVzLkZFVENIX1VOQ09ORklHVVJFRF9EQVRBU09VUkNFX0xJU1QsXG4gICAgICBmZXRjaFVuY29uZmlndXJlZERhdGFzb3VyY2VMaXN0LFxuICAgICksXG4gIF0pO1xufVxu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