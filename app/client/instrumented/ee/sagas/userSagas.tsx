function cov_1ysdck7bst() {
  var path = "/Users/apple/github/appsmith/app/client/src/ee/sagas/userSagas.tsx";
  var hash = "f9bd10454d204ee31ef7906652ecd65df240a7e8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/apple/github/appsmith/app/client/src/ee/sagas/userSagas.tsx",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 56,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "userSagas",
        decl: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 34
          }
        },
        loc: {
          start: {
            line: 23,
            column: 37
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 23
      }
    },
    branchMap: {},
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f9bd10454d204ee31ef7906652ecd65df240a7e8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ysdck7bst = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ysdck7bst();
export * from "ce/sagas/userSagas";
import { createUserSaga, getCurrentUserSaga, runUserSideEffectsSaga, forgotPasswordSaga, resetPasswordSaga, verifyResetPasswordTokenSaga, inviteUsers, logoutSaga, verifyUserInviteSaga, invitedUserSignupSaga, updateUserDetailsSaga, removePhoto, updatePhoto, leaveWorkspaceSaga, fetchFeatureFlags, updateFirstTimeUserOnboardingSage } from "ce/sagas/userSagas";
import { ReduxActionTypes } from "@appsmith/constants/ReduxActionConstants";
import { takeLatest, all } from "redux-saga/effects";
export default function* userSagas() {
  cov_1ysdck7bst().f[0]++;
  cov_1ysdck7bst().s[0]++;
  yield all([takeLatest(ReduxActionTypes.CREATE_USER_INIT, createUserSaga), takeLatest(ReduxActionTypes.FETCH_USER_INIT, getCurrentUserSaga), takeLatest(ReduxActionTypes.FETCH_USER_DETAILS_SUCCESS, runUserSideEffectsSaga), takeLatest(ReduxActionTypes.FORGOT_PASSWORD_INIT, forgotPasswordSaga), takeLatest(ReduxActionTypes.RESET_USER_PASSWORD_INIT, resetPasswordSaga), takeLatest(ReduxActionTypes.RESET_PASSWORD_VERIFY_TOKEN_INIT, verifyResetPasswordTokenSaga), takeLatest(ReduxActionTypes.INVITE_USERS_TO_WORKSPACE_INIT, inviteUsers), takeLatest(ReduxActionTypes.LOGOUT_USER_INIT, logoutSaga), takeLatest(ReduxActionTypes.VERIFY_INVITE_INIT, verifyUserInviteSaga), takeLatest(ReduxActionTypes.INVITED_USER_SIGNUP_INIT, invitedUserSignupSaga), takeLatest(ReduxActionTypes.UPDATE_USER_DETAILS_INIT, updateUserDetailsSaga), takeLatest(ReduxActionTypes.REMOVE_PROFILE_PHOTO, removePhoto), takeLatest(ReduxActionTypes.UPLOAD_PROFILE_PHOTO, updatePhoto), takeLatest(ReduxActionTypes.LEAVE_WORKSPACE_INIT, leaveWorkspaceSaga), takeLatest(ReduxActionTypes.FETCH_FEATURE_FLAGS_INIT, fetchFeatureFlags), takeLatest(ReduxActionTypes.FETCH_USER_DETAILS_SUCCESS, updateFirstTimeUserOnboardingSage)]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXlzZGNrN2JzdCIsImFjdHVhbENvdmVyYWdlIiwiY3JlYXRlVXNlclNhZ2EiLCJnZXRDdXJyZW50VXNlclNhZ2EiLCJydW5Vc2VyU2lkZUVmZmVjdHNTYWdhIiwiZm9yZ290UGFzc3dvcmRTYWdhIiwicmVzZXRQYXNzd29yZFNhZ2EiLCJ2ZXJpZnlSZXNldFBhc3N3b3JkVG9rZW5TYWdhIiwiaW52aXRlVXNlcnMiLCJsb2dvdXRTYWdhIiwidmVyaWZ5VXNlckludml0ZVNhZ2EiLCJpbnZpdGVkVXNlclNpZ251cFNhZ2EiLCJ1cGRhdGVVc2VyRGV0YWlsc1NhZ2EiLCJyZW1vdmVQaG90byIsInVwZGF0ZVBob3RvIiwibGVhdmVXb3Jrc3BhY2VTYWdhIiwiZmV0Y2hGZWF0dXJlRmxhZ3MiLCJ1cGRhdGVGaXJzdFRpbWVVc2VyT25ib2FyZGluZ1NhZ2UiLCJSZWR1eEFjdGlvblR5cGVzIiwidGFrZUxhdGVzdCIsImFsbCIsInVzZXJTYWdhcyIsImYiLCJzIiwiQ1JFQVRFX1VTRVJfSU5JVCIsIkZFVENIX1VTRVJfSU5JVCIsIkZFVENIX1VTRVJfREVUQUlMU19TVUNDRVNTIiwiRk9SR09UX1BBU1NXT1JEX0lOSVQiLCJSRVNFVF9VU0VSX1BBU1NXT1JEX0lOSVQiLCJSRVNFVF9QQVNTV09SRF9WRVJJRllfVE9LRU5fSU5JVCIsIklOVklURV9VU0VSU19UT19XT1JLU1BBQ0VfSU5JVCIsIkxPR09VVF9VU0VSX0lOSVQiLCJWRVJJRllfSU5WSVRFX0lOSVQiLCJJTlZJVEVEX1VTRVJfU0lHTlVQX0lOSVQiLCJVUERBVEVfVVNFUl9ERVRBSUxTX0lOSVQiLCJSRU1PVkVfUFJPRklMRV9QSE9UTyIsIlVQTE9BRF9QUk9GSUxFX1BIT1RPIiwiTEVBVkVfV09SS1NQQUNFX0lOSVQiLCJGRVRDSF9GRUFUVVJFX0ZMQUdTX0lOSVQiXSwic291cmNlcyI6WyJ1c2VyU2FnYXMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJjZS9zYWdhcy91c2VyU2FnYXNcIjtcbmltcG9ydCB7XG4gIGNyZWF0ZVVzZXJTYWdhLFxuICBnZXRDdXJyZW50VXNlclNhZ2EsXG4gIHJ1blVzZXJTaWRlRWZmZWN0c1NhZ2EsXG4gIGZvcmdvdFBhc3N3b3JkU2FnYSxcbiAgcmVzZXRQYXNzd29yZFNhZ2EsXG4gIHZlcmlmeVJlc2V0UGFzc3dvcmRUb2tlblNhZ2EsXG4gIGludml0ZVVzZXJzLFxuICBsb2dvdXRTYWdhLFxuICB2ZXJpZnlVc2VySW52aXRlU2FnYSxcbiAgaW52aXRlZFVzZXJTaWdudXBTYWdhLFxuICB1cGRhdGVVc2VyRGV0YWlsc1NhZ2EsXG4gIHJlbW92ZVBob3RvLFxuICB1cGRhdGVQaG90byxcbiAgbGVhdmVXb3Jrc3BhY2VTYWdhLFxuICBmZXRjaEZlYXR1cmVGbGFncyxcbiAgdXBkYXRlRmlyc3RUaW1lVXNlck9uYm9hcmRpbmdTYWdlLFxufSBmcm9tIFwiY2Uvc2FnYXMvdXNlclNhZ2FzXCI7XG5pbXBvcnQgeyBSZWR1eEFjdGlvblR5cGVzIH0gZnJvbSBcIkBhcHBzbWl0aC9jb25zdGFudHMvUmVkdXhBY3Rpb25Db25zdGFudHNcIjtcbmltcG9ydCB7IHRha2VMYXRlc3QsIGFsbCB9IGZyb20gXCJyZWR1eC1zYWdhL2VmZmVjdHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24qIHVzZXJTYWdhcygpIHtcbiAgeWllbGQgYWxsKFtcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuQ1JFQVRFX1VTRVJfSU5JVCwgY3JlYXRlVXNlclNhZ2EpLFxuICAgIHRha2VMYXRlc3QoUmVkdXhBY3Rpb25UeXBlcy5GRVRDSF9VU0VSX0lOSVQsIGdldEN1cnJlbnRVc2VyU2FnYSksXG4gICAgdGFrZUxhdGVzdChcbiAgICAgIFJlZHV4QWN0aW9uVHlwZXMuRkVUQ0hfVVNFUl9ERVRBSUxTX1NVQ0NFU1MsXG4gICAgICBydW5Vc2VyU2lkZUVmZmVjdHNTYWdhLFxuICAgICksXG4gICAgdGFrZUxhdGVzdChSZWR1eEFjdGlvblR5cGVzLkZPUkdPVF9QQVNTV09SRF9JTklULCBmb3Jnb3RQYXNzd29yZFNhZ2EpLFxuICAgIHRha2VMYXRlc3QoUmVkdXhBY3Rpb25UeXBlcy5SRVNFVF9VU0VSX1BBU1NXT1JEX0lOSVQsIHJlc2V0UGFzc3dvcmRTYWdhKSxcbiAgICB0YWtlTGF0ZXN0KFxuICAgICAgUmVkdXhBY3Rpb25UeXBlcy5SRVNFVF9QQVNTV09SRF9WRVJJRllfVE9LRU5fSU5JVCxcbiAgICAgIHZlcmlmeVJlc2V0UGFzc3dvcmRUb2tlblNhZ2EsXG4gICAgKSxcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuSU5WSVRFX1VTRVJTX1RPX1dPUktTUEFDRV9JTklULCBpbnZpdGVVc2VycyksXG4gICAgdGFrZUxhdGVzdChSZWR1eEFjdGlvblR5cGVzLkxPR09VVF9VU0VSX0lOSVQsIGxvZ291dFNhZ2EpLFxuICAgIHRha2VMYXRlc3QoUmVkdXhBY3Rpb25UeXBlcy5WRVJJRllfSU5WSVRFX0lOSVQsIHZlcmlmeVVzZXJJbnZpdGVTYWdhKSxcbiAgICB0YWtlTGF0ZXN0KFxuICAgICAgUmVkdXhBY3Rpb25UeXBlcy5JTlZJVEVEX1VTRVJfU0lHTlVQX0lOSVQsXG4gICAgICBpbnZpdGVkVXNlclNpZ251cFNhZ2EsXG4gICAgKSxcbiAgICB0YWtlTGF0ZXN0KFxuICAgICAgUmVkdXhBY3Rpb25UeXBlcy5VUERBVEVfVVNFUl9ERVRBSUxTX0lOSVQsXG4gICAgICB1cGRhdGVVc2VyRGV0YWlsc1NhZ2EsXG4gICAgKSxcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuUkVNT1ZFX1BST0ZJTEVfUEhPVE8sIHJlbW92ZVBob3RvKSxcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuVVBMT0FEX1BST0ZJTEVfUEhPVE8sIHVwZGF0ZVBob3RvKSxcbiAgICB0YWtlTGF0ZXN0KFJlZHV4QWN0aW9uVHlwZXMuTEVBVkVfV09SS1NQQUNFX0lOSVQsIGxlYXZlV29ya3NwYWNlU2FnYSksXG4gICAgdGFrZUxhdGVzdChSZWR1eEFjdGlvblR5cGVzLkZFVENIX0ZFQVRVUkVfRkxBR1NfSU5JVCwgZmV0Y2hGZWF0dXJlRmxhZ3MpLFxuICAgIHRha2VMYXRlc3QoXG4gICAgICBSZWR1eEFjdGlvblR5cGVzLkZFVENIX1VTRVJfREVUQUlMU19TVUNDRVNTLFxuICAgICAgdXBkYXRlRmlyc3RUaW1lVXNlck9uYm9hcmRpbmdTYWdlLFxuICAgICksXG4gIF0pO1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQWVZO0lBQUFBLGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGNBQUE7QUFmWixjQUFjLG9CQUFvQjtBQUNsQyxTQUNFRSxjQUFjLEVBQ2RDLGtCQUFrQixFQUNsQkMsc0JBQXNCLEVBQ3RCQyxrQkFBa0IsRUFDbEJDLGlCQUFpQixFQUNqQkMsNEJBQTRCLEVBQzVCQyxXQUFXLEVBQ1hDLFVBQVUsRUFDVkMsb0JBQW9CLEVBQ3BCQyxxQkFBcUIsRUFDckJDLHFCQUFxQixFQUNyQkMsV0FBVyxFQUNYQyxXQUFXLEVBQ1hDLGtCQUFrQixFQUNsQkMsaUJBQWlCLEVBQ2pCQyxpQ0FBaUMsUUFDNUIsb0JBQW9CO0FBQzNCLFNBQVNDLGdCQUFnQixRQUFRLDBDQUEwQztBQUMzRSxTQUFTQyxVQUFVLEVBQUVDLEdBQUcsUUFBUSxvQkFBb0I7QUFFcEQsZUFBZSxVQUFVQyxTQUFTQSxDQUFBLEVBQUc7RUFBQXJCLGNBQUEsR0FBQXNCLENBQUE7RUFBQXRCLGNBQUEsR0FBQXVCLENBQUE7RUFDbkMsTUFBTUgsR0FBRyxDQUFDLENBQ1JELFVBQVUsQ0FBQ0QsZ0JBQWdCLENBQUNNLGdCQUFnQixFQUFFdEIsY0FBYyxDQUFDLEVBQzdEaUIsVUFBVSxDQUFDRCxnQkFBZ0IsQ0FBQ08sZUFBZSxFQUFFdEIsa0JBQWtCLENBQUMsRUFDaEVnQixVQUFVLENBQ1JELGdCQUFnQixDQUFDUSwwQkFBMEIsRUFDM0N0QixzQkFDRixDQUFDLEVBQ0RlLFVBQVUsQ0FBQ0QsZ0JBQWdCLENBQUNTLG9CQUFvQixFQUFFdEIsa0JBQWtCLENBQUMsRUFDckVjLFVBQVUsQ0FBQ0QsZ0JBQWdCLENBQUNVLHdCQUF3QixFQUFFdEIsaUJBQWlCLENBQUMsRUFDeEVhLFVBQVUsQ0FDUkQsZ0JBQWdCLENBQUNXLGdDQUFnQyxFQUNqRHRCLDRCQUNGLENBQUMsRUFDRFksVUFBVSxDQUFDRCxnQkFBZ0IsQ0FBQ1ksOEJBQThCLEVBQUV0QixXQUFXLENBQUMsRUFDeEVXLFVBQVUsQ0FBQ0QsZ0JBQWdCLENBQUNhLGdCQUFnQixFQUFFdEIsVUFBVSxDQUFDLEVBQ3pEVSxVQUFVLENBQUNELGdCQUFnQixDQUFDYyxrQkFBa0IsRUFBRXRCLG9CQUFvQixDQUFDLEVBQ3JFUyxVQUFVLENBQ1JELGdCQUFnQixDQUFDZSx3QkFBd0IsRUFDekN0QixxQkFDRixDQUFDLEVBQ0RRLFVBQVUsQ0FDUkQsZ0JBQWdCLENBQUNnQix3QkFBd0IsRUFDekN0QixxQkFDRixDQUFDLEVBQ0RPLFVBQVUsQ0FBQ0QsZ0JBQWdCLENBQUNpQixvQkFBb0IsRUFBRXRCLFdBQVcsQ0FBQyxFQUM5RE0sVUFBVSxDQUFDRCxnQkFBZ0IsQ0FBQ2tCLG9CQUFvQixFQUFFdEIsV0FBVyxDQUFDLEVBQzlESyxVQUFVLENBQUNELGdCQUFnQixDQUFDbUIsb0JBQW9CLEVBQUV0QixrQkFBa0IsQ0FBQyxFQUNyRUksVUFBVSxDQUFDRCxnQkFBZ0IsQ0FBQ29CLHdCQUF3QixFQUFFdEIsaUJBQWlCLENBQUMsRUFDeEVHLFVBQVUsQ0FDUkQsZ0JBQWdCLENBQUNRLDBCQUEwQixFQUMzQ1QsaUNBQ0YsQ0FBQyxDQUNGLENBQUM7QUFDSiJ9