function cov_vefd7o5wp() {
  var path = "/Users/apple/github/appsmith/app/client/src/widgets/RangeSliderWidget/widget/propertyConfig/styleConfig.ts";
  var hash = "82f363712a32d67dcc22480638d2680bc71dc456";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/apple/github/appsmith/app/client/src/widgets/RangeSliderWidget/widget/propertyConfig/styleConfig.ts",
    statementMap: {},
    fnMap: {},
    branchMap: {},
    s: {},
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "82f363712a32d67dcc22480638d2680bc71dc456"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vefd7o5wp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vefd7o5wp();
import { ValidationTypes } from "constants/WidgetValidation";
import { isAutoLayout } from "utils/autoLayout/flexWidgetUtils";
export default [{
  sectionName: "General",
  children: [{
    helpText: "Controls the size of the slider",
    propertyName: "sliderSize",
    label: "Size",
    controlType: "ICON_TABS",
    fullWidth: true,
    defaultValue: "m",
    options: [{
      label: "S",
      value: "s",
      subText: "4px"
    }, {
      label: "M",
      value: "m",
      subText: "6px"
    }, {
      label: "L",
      value: "l",
      subText: "8px"
    }],
    isBindProperty: true,
    isTriggerProperty: false,
    validation: {
      type: ValidationTypes.TEXT
    }
  }]
}, {
  sectionName: "Label styles",
  children: [{
    propertyName: "labelTextColor",
    label: "Font color",
    helpText: "Control the color of the label associated",
    controlType: "COLOR_PICKER",
    isJSConvertible: true,
    isBindProperty: true,
    isTriggerProperty: false,
    validation: {
      type: ValidationTypes.TEXT
    }
  }, {
    propertyName: "labelTextSize",
    label: "Label text size",
    helpText: "Control the font size of the label associated",
    controlType: "DROP_DOWN",
    defaultValue: "0.875rem",
    hidden: isAutoLayout,
    options: [{
      label: "S",
      value: "0.875rem",
      subText: "0.875rem"
    }, {
      label: "M",
      value: "1rem",
      subText: "1rem"
    }, {
      label: "L",
      value: "1.25rem",
      subText: "1.25rem"
    }, {
      label: "XL",
      value: "1.875rem",
      subText: "1.875rem"
    }, {
      label: "XXL",
      value: "3rem",
      subText: "3rem"
    }, {
      label: "3XL",
      value: "3.75rem",
      subText: "3.75rem"
    }],
    isJSConvertible: true,
    isBindProperty: true,
    isTriggerProperty: false,
    validation: {
      type: ValidationTypes.TEXT
    }
  }, {
    propertyName: "labelStyle",
    label: "Emphasis",
    helpText: "Control if the label should be bold or italics",
    controlType: "BUTTON_GROUP",
    options: [{
      icon: "text-bold",
      value: "BOLD"
    }, {
      icon: "text-italic",
      value: "ITALIC"
    }],
    isJSConvertible: true,
    isBindProperty: true,
    isTriggerProperty: false,
    validation: {
      type: ValidationTypes.TEXT
    }
  }]
}, {
  sectionName: "Color",
  children: [{
    helpText: "Sets the fill color of the widget",
    propertyName: "accentColor",
    label: "Fill color",
    controlType: "COLOR_PICKER",
    isJSConvertible: true,
    isBindProperty: true,
    isTriggerProperty: false,
    validation: {
      type: ValidationTypes.TEXT
    }
  }]
}];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfdmVmZDdvNXdwIiwiYWN0dWFsQ292ZXJhZ2UiLCJWYWxpZGF0aW9uVHlwZXMiLCJpc0F1dG9MYXlvdXQiLCJzZWN0aW9uTmFtZSIsImNoaWxkcmVuIiwiaGVscFRleHQiLCJwcm9wZXJ0eU5hbWUiLCJsYWJlbCIsImNvbnRyb2xUeXBlIiwiZnVsbFdpZHRoIiwiZGVmYXVsdFZhbHVlIiwib3B0aW9ucyIsInZhbHVlIiwic3ViVGV4dCIsImlzQmluZFByb3BlcnR5IiwiaXNUcmlnZ2VyUHJvcGVydHkiLCJ2YWxpZGF0aW9uIiwidHlwZSIsIlRFWFQiLCJpc0pTQ29udmVydGlibGUiLCJoaWRkZW4iLCJpY29uIl0sInNvdXJjZXMiOlsic3R5bGVDb25maWcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmFsaWRhdGlvblR5cGVzIH0gZnJvbSBcImNvbnN0YW50cy9XaWRnZXRWYWxpZGF0aW9uXCI7XG5pbXBvcnQgeyBpc0F1dG9MYXlvdXQgfSBmcm9tIFwidXRpbHMvYXV0b0xheW91dC9mbGV4V2lkZ2V0VXRpbHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgW1xuICB7XG4gICAgc2VjdGlvbk5hbWU6IFwiR2VuZXJhbFwiLFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIGhlbHBUZXh0OiBcIkNvbnRyb2xzIHRoZSBzaXplIG9mIHRoZSBzbGlkZXJcIixcbiAgICAgICAgcHJvcGVydHlOYW1lOiBcInNsaWRlclNpemVcIixcbiAgICAgICAgbGFiZWw6IFwiU2l6ZVwiLFxuICAgICAgICBjb250cm9sVHlwZTogXCJJQ09OX1RBQlNcIixcbiAgICAgICAgZnVsbFdpZHRoOiB0cnVlLFxuICAgICAgICBkZWZhdWx0VmFsdWU6IFwibVwiLFxuICAgICAgICBvcHRpb25zOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiU1wiLFxuICAgICAgICAgICAgdmFsdWU6IFwic1wiLFxuICAgICAgICAgICAgc3ViVGV4dDogXCI0cHhcIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIk1cIixcbiAgICAgICAgICAgIHZhbHVlOiBcIm1cIixcbiAgICAgICAgICAgIHN1YlRleHQ6IFwiNnB4XCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJMXCIsXG4gICAgICAgICAgICB2YWx1ZTogXCJsXCIsXG4gICAgICAgICAgICBzdWJUZXh0OiBcIjhweFwiLFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICAgIGlzQmluZFByb3BlcnR5OiB0cnVlLFxuICAgICAgICBpc1RyaWdnZXJQcm9wZXJ0eTogZmFsc2UsXG4gICAgICAgIHZhbGlkYXRpb246IHsgdHlwZTogVmFsaWRhdGlvblR5cGVzLlRFWFQgfSxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSxcbiAge1xuICAgIHNlY3Rpb25OYW1lOiBcIkxhYmVsIHN0eWxlc1wiLFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIHByb3BlcnR5TmFtZTogXCJsYWJlbFRleHRDb2xvclwiLFxuICAgICAgICBsYWJlbDogXCJGb250IGNvbG9yXCIsXG4gICAgICAgIGhlbHBUZXh0OiBcIkNvbnRyb2wgdGhlIGNvbG9yIG9mIHRoZSBsYWJlbCBhc3NvY2lhdGVkXCIsXG4gICAgICAgIGNvbnRyb2xUeXBlOiBcIkNPTE9SX1BJQ0tFUlwiLFxuICAgICAgICBpc0pTQ29udmVydGlibGU6IHRydWUsXG4gICAgICAgIGlzQmluZFByb3BlcnR5OiB0cnVlLFxuICAgICAgICBpc1RyaWdnZXJQcm9wZXJ0eTogZmFsc2UsXG4gICAgICAgIHZhbGlkYXRpb246IHsgdHlwZTogVmFsaWRhdGlvblR5cGVzLlRFWFQgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHByb3BlcnR5TmFtZTogXCJsYWJlbFRleHRTaXplXCIsXG4gICAgICAgIGxhYmVsOiBcIkxhYmVsIHRleHQgc2l6ZVwiLFxuICAgICAgICBoZWxwVGV4dDogXCJDb250cm9sIHRoZSBmb250IHNpemUgb2YgdGhlIGxhYmVsIGFzc29jaWF0ZWRcIixcbiAgICAgICAgY29udHJvbFR5cGU6IFwiRFJPUF9ET1dOXCIsXG4gICAgICAgIGRlZmF1bHRWYWx1ZTogXCIwLjg3NXJlbVwiLFxuICAgICAgICBoaWRkZW46IGlzQXV0b0xheW91dCxcbiAgICAgICAgb3B0aW9uczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIlNcIixcbiAgICAgICAgICAgIHZhbHVlOiBcIjAuODc1cmVtXCIsXG4gICAgICAgICAgICBzdWJUZXh0OiBcIjAuODc1cmVtXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJNXCIsXG4gICAgICAgICAgICB2YWx1ZTogXCIxcmVtXCIsXG4gICAgICAgICAgICBzdWJUZXh0OiBcIjFyZW1cIixcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGxhYmVsOiBcIkxcIixcbiAgICAgICAgICAgIHZhbHVlOiBcIjEuMjVyZW1cIixcbiAgICAgICAgICAgIHN1YlRleHQ6IFwiMS4yNXJlbVwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiWExcIixcbiAgICAgICAgICAgIHZhbHVlOiBcIjEuODc1cmVtXCIsXG4gICAgICAgICAgICBzdWJUZXh0OiBcIjEuODc1cmVtXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBsYWJlbDogXCJYWExcIixcbiAgICAgICAgICAgIHZhbHVlOiBcIjNyZW1cIixcbiAgICAgICAgICAgIHN1YlRleHQ6IFwiM3JlbVwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbGFiZWw6IFwiM1hMXCIsXG4gICAgICAgICAgICB2YWx1ZTogXCIzLjc1cmVtXCIsXG4gICAgICAgICAgICBzdWJUZXh0OiBcIjMuNzVyZW1cIixcbiAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgICBpc0pTQ29udmVydGlibGU6IHRydWUsXG4gICAgICAgIGlzQmluZFByb3BlcnR5OiB0cnVlLFxuICAgICAgICBpc1RyaWdnZXJQcm9wZXJ0eTogZmFsc2UsXG4gICAgICAgIHZhbGlkYXRpb246IHsgdHlwZTogVmFsaWRhdGlvblR5cGVzLlRFWFQgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHByb3BlcnR5TmFtZTogXCJsYWJlbFN0eWxlXCIsXG4gICAgICAgIGxhYmVsOiBcIkVtcGhhc2lzXCIsXG4gICAgICAgIGhlbHBUZXh0OiBcIkNvbnRyb2wgaWYgdGhlIGxhYmVsIHNob3VsZCBiZSBib2xkIG9yIGl0YWxpY3NcIixcbiAgICAgICAgY29udHJvbFR5cGU6IFwiQlVUVE9OX0dST1VQXCIsXG4gICAgICAgIG9wdGlvbnM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpY29uOiBcInRleHQtYm9sZFwiLFxuICAgICAgICAgICAgdmFsdWU6IFwiQk9MRFwiLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaWNvbjogXCJ0ZXh0LWl0YWxpY1wiLFxuICAgICAgICAgICAgdmFsdWU6IFwiSVRBTElDXCIsXG4gICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICAgICAgaXNKU0NvbnZlcnRpYmxlOiB0cnVlLFxuICAgICAgICBpc0JpbmRQcm9wZXJ0eTogdHJ1ZSxcbiAgICAgICAgaXNUcmlnZ2VyUHJvcGVydHk6IGZhbHNlLFxuICAgICAgICB2YWxpZGF0aW9uOiB7IHR5cGU6IFZhbGlkYXRpb25UeXBlcy5URVhUIH0sXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG4gIHtcbiAgICBzZWN0aW9uTmFtZTogXCJDb2xvclwiLFxuICAgIGNoaWxkcmVuOiBbXG4gICAgICB7XG4gICAgICAgIGhlbHBUZXh0OiBcIlNldHMgdGhlIGZpbGwgY29sb3Igb2YgdGhlIHdpZGdldFwiLFxuICAgICAgICBwcm9wZXJ0eU5hbWU6IFwiYWNjZW50Q29sb3JcIixcbiAgICAgICAgbGFiZWw6IFwiRmlsbCBjb2xvclwiLFxuICAgICAgICBjb250cm9sVHlwZTogXCJDT0xPUl9QSUNLRVJcIixcbiAgICAgICAgaXNKU0NvbnZlcnRpYmxlOiB0cnVlLFxuICAgICAgICBpc0JpbmRQcm9wZXJ0eTogdHJ1ZSxcbiAgICAgICAgaXNUcmlnZ2VyUHJvcGVydHk6IGZhbHNlLFxuICAgICAgICB2YWxpZGF0aW9uOiB7IHR5cGU6IFZhbGlkYXRpb25UeXBlcy5URVhUIH0sXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG5dO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZVk7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQWZaLFNBQVNFLGVBQWUsUUFBUSw0QkFBNEI7QUFDNUQsU0FBU0MsWUFBWSxRQUFRLGtDQUFrQztBQUUvRCxlQUFlLENBQ2I7RUFDRUMsV0FBVyxFQUFFLFNBQVM7RUFDdEJDLFFBQVEsRUFBRSxDQUNSO0lBQ0VDLFFBQVEsRUFBRSxpQ0FBaUM7SUFDM0NDLFlBQVksRUFBRSxZQUFZO0lBQzFCQyxLQUFLLEVBQUUsTUFBTTtJQUNiQyxXQUFXLEVBQUUsV0FBVztJQUN4QkMsU0FBUyxFQUFFLElBQUk7SUFDZkMsWUFBWSxFQUFFLEdBQUc7SUFDakJDLE9BQU8sRUFBRSxDQUNQO01BQ0VKLEtBQUssRUFBRSxHQUFHO01BQ1ZLLEtBQUssRUFBRSxHQUFHO01BQ1ZDLE9BQU8sRUFBRTtJQUNYLENBQUMsRUFDRDtNQUNFTixLQUFLLEVBQUUsR0FBRztNQUNWSyxLQUFLLEVBQUUsR0FBRztNQUNWQyxPQUFPLEVBQUU7SUFDWCxDQUFDLEVBQ0Q7TUFDRU4sS0FBSyxFQUFFLEdBQUc7TUFDVkssS0FBSyxFQUFFLEdBQUc7TUFDVkMsT0FBTyxFQUFFO0lBQ1gsQ0FBQyxDQUNGO0lB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